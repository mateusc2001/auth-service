import { Router, NextFunction, Response, Request, request } from 'express'
import { UserModel } from './model/user.model';
import * as config from './config/config';
import * as jwt from "jsonwebtoken";
import { UserSchema } from "./schemas/user.schema";
import * as http from "request-promise-native";

let usuarios = [
    {
        id: 1,
        usuario: 'renata',
        nomeCompleto: 'Renata Barth',
        dataCriacao: new Date("2021-06-21T22:06:26.819Z"),
        senha: '111',
        saldo: 0
    }, {
        id: 2,
        usuario: 'vinicius',
        dataCriacao: new Date("2021-06-22T22:03:46.819Z"),
        nomeCompleto: 'Vinicius Barth',
        senha: '222',
        saldo: 0
    }, {
        id: 3,
        usuario: 'admin',
        dataCriacao: new Date("2021-06-22T22:04:46.819Z"),
        nomeCompleto: 'Mateus Camargo',
        senha: 'admin',
        saldo: 0
    }
];
let registros = [];
registros = [
    {
        "banco": 2,
        "data": "28/12/2020",
        "descricao": "INTEGR.CAPITAL SUBSCRITO ",
        "documento": "1",
        "entrada": false,
        "valor": -50,
        "id": 49679,
        "dataCriacao": "2021-06-23T20:29:07.715Z"
    },
    {
        "banco": 2,
        "data": "07/01/2021",
        "descricao": "DEP DINHEIRO ",
        "documento": "304899941",
        "entrada": true,
        "valor": 260,
        "id": 53588,
        "dataCriacao": "2021-06-23T20:29:07.715Z"
    },
    {
        "banco": 2,
        "data": "07/01/2021",
        "descricao": "DEP CHEQUE 24H ",
        "documento": "453937918",
        "entrada": true,
        "valor": 7130,
        "id": 48789,
        "dataCriacao": "2021-06-23T20:29:07.715Z"
    },
    {
        "banco": 2,
        "data": "07/01/2021",
        "descricao": "DEP CHEQUE 24H ",
        "documento": "424950316",
        "entrada": true,
        "valor": 7360,
        "id": 52629,
        "dataCriacao": "2021-06-23T20:29:07.715Z",
        "transacao": {
            "idUsuarioOrigem": 1,
            "idUsuarioDestinatario": 2,
            "geraComissao": false,
            "porcentagemComissao": null,
            "valorComissao": null
        },
        "descricaoPessoal": "Financiamento ka"
    },
    {
        "banco": 2,
        "data": "07/01/2021",
        "descricao": "DEP CHEQUE ",
        "documento": "424950316",
        "entrada": true,
        "valor": 2338,
        "id": 48783,
        "dataCriacao": "2021-06-23T20:29:07.715Z"
    },
    {
        "banco": 2,
        "data": "07/01/2021",
        "descricao": "DEP CHEQUE ",
        "documento": "424950286",
        "entrada": true,
        "valor": 19520,
        "id": 48694,
        "dataCriacao": "2021-06-23T20:29:07.715Z",
        "transacao": {
            "idUsuarioOrigem": 1,
            "idUsuarioDestinatario": 3,
            "geraComissao": false,
            "porcentagemComissao": null,
            "valorComissao": null
        },
        "descricaoPessoal": "Financiamento lalal"
    },
    {
        "banco": 2,
        "data": "07/01/2021",
        "descricao": "COMPRAS NACIONAIS SERAFIM AUTO PECAS       GRAVA",
        "documento": "VE0775673",
        "entrada": false,
        "valor": -166,
        "id": 55571,
        "dataCriacao": "2021-06-23T20:29:07.715Z"
    },
    {
        "banco": 2,
        "data": "07/01/2021",
        "descricao": "DEP CHEQUE 72H ",
        "documento": "424950317",
        "entrada": true,
        "valor": 1425,
        "id": 51570,
        "dataCriacao": "2021-06-23T20:29:07.715Z"
    },
    {
        "banco": 2,
        "data": "07/01/2021",
        "descricao": "DEP CHEQUE 72H ",
        "documento": "424950318",
        "entrada": true,
        "valor": 1488,
        "id": 53685,
        "dataCriacao": "2021-06-23T20:29:07.715Z"
    },
    {
        "banco": 2,
        "data": "08/01/2021",
        "descricao": "DEV. CHEQUE DEPOSITADO ",
        "documento": "850726/11",
        "entrada": false,
        "valor": -1090,
        "id": 48726,
        "dataCriacao": "2021-06-23T20:29:07.715Z"
    },
    {
        "banco": 2,
        "data": "08/01/2021",
        "descricao": "DEV. CHEQUE DEPOSITADO ",
        "documento": "000040/22",
        "entrada": false,
        "valor": -390,
        "id": 56507,
        "dataCriacao": "2021-06-23T20:29:07.715Z"
    },
    {
        "banco": 2,
        "data": "11/01/2021",
        "descricao": "TED 59285411000113 BANCO PAN SA                 ",
        "documento": "736195",
        "entrada": true,
        "valor": 114.2,
        "id": 51542,
        "dataCriacao": "2021-06-23T20:29:07.715Z"
    },
    {
        "banco": 2,
        "data": "12/01/2021",
        "descricao": "COMPRAS NACIONAIS SCHEILA LAUX HOLDEFER    PORTA",
        "documento": "VE0141461",
        "entrada": false,
        "valor": -292,
        "id": 55481,
        "dataCriacao": "2021-06-23T20:29:07.715Z"
    },
    {
        "banco": 2,
        "data": "12/01/2021",
        "descricao": "DEV. CHEQUE DEPOSITADO ",
        "documento": "000051/35",
        "entrada": false,
        "valor": -1488,
        "id": 49749,
        "dataCriacao": "2021-06-23T20:29:07.715Z"
    },
    {
        "banco": 2,
        "data": "13/01/2021",
        "descricao": "TED 59285411000113 BANCO PAN SA                 ",
        "documento": "903743",
        "entrada": true,
        "valor": 80.57,
        "id": 53590,
        "dataCriacao": "2021-06-23T20:29:07.715Z"
    },
    {
        "banco": 2,
        "data": "13/01/2021",
        "descricao": "DEBITO TED/IB 81035063034 AUREA CORUJA BARTH",
        "documento": "I02585",
        "entrada": false,
        "valor": -26500,
        "id": 49719,
        "dataCriacao": "2021-06-23T20:29:07.715Z"
    },
    {
        "banco": 2,
        "data": "13/01/2021",
        "descricao": "LIQUIDACAO DE BLOQUETOS ",
        "documento": " ",
        "entrada": false,
        "valor": -270,
        "id": 54457,
        "dataCriacao": "2021-06-23T20:29:07.715Z"
    },
    {
        "banco": 2,
        "data": "13/01/2021",
        "descricao": "DEBITO CONVENIOS ",
        "documento": "RGE SUL-G",
        "entrada": false,
        "valor": -175.18,
        "id": 51516,
        "dataCriacao": "2021-06-23T20:29:07.715Z"
    },
    {
        "banco": 2,
        "data": "13/01/2021",
        "descricao": "DEBITO CONVENIOS ",
        "documento": "CLARORS-G",
        "entrada": false,
        "valor": -41.59,
        "id": 1665,
        "dataCriacao": "2021-06-23T20:29:07.715Z"
    },
    {
        "banco": 2,
        "data": "13/01/2021",
        "descricao": "DEBITO CONVENIOS ",
        "documento": "VIVO RS-G",
        "entrada": false,
        "valor": -91.83,
        "id": 51725,
        "dataCriacao": "2021-06-23T20:29:07.715Z"
    },
    {
        "banco": 2,
        "data": "13/01/2021",
        "descricao": "DEBITO CONVENIOS ",
        "documento": "VIVO",
        "entrada": false,
        "valor": -107.11,
        "id": 49683,
        "dataCriacao": "2021-06-23T20:29:07.715Z"
    },
    {
        "banco": 2,
        "data": "13/01/2021",
        "descricao": "LIQUIDACAO DE BLOQUETOS ",
        "documento": " ",
        "entrada": false,
        "valor": -116.8,
        "id": 55387,
        "dataCriacao": "2021-06-23T20:29:07.715Z"
    },
    {
        "banco": 2,
        "data": "13/01/2021",
        "descricao": "LIQUIDACAO DE BLOQUETOS ",
        "documento": " ",
        "entrada": false,
        "valor": -125.66,
        "id": 54400,
        "dataCriacao": "2021-06-23T20:29:07.715Z"
    },
    {
        "banco": 2,
        "data": "13/01/2021",
        "descricao": "LIQUIDACAO DE BLOQUETOS ",
        "documento": " ",
        "entrada": false,
        "valor": -582.44,
        "id": 55386,
        "dataCriacao": "2021-06-23T20:29:07.715Z"
    },
    {
        "banco": 2,
        "data": "13/01/2021",
        "descricao": "LIQUIDACAO DE BLOQUETOS ",
        "documento": " ",
        "entrada": false,
        "valor": -731.33,
        "id": 51664,
        "dataCriacao": "2021-06-23T20:29:07.715Z"
    },
    {
        "banco": 2,
        "data": "14/01/2021",
        "descricao": "LIQUIDACAO DE PARCELA ",
        "documento": "C00531561",
        "entrada": false,
        "valor": -973.18,
        "id": 54679,
        "dataCriacao": "2021-06-23T20:29:07.715Z"
    },
    {
        "banco": 2,
        "data": "14/01/2021",
        "descricao": "LIQUIDACAO DE BLOQUETOS ",
        "documento": " ",
        "entrada": false,
        "valor": -547.88,
        "id": 52626,
        "dataCriacao": "2021-06-23T20:29:07.715Z"
    },
    {
        "banco": 2,
        "data": "14/01/2021",
        "descricao": "TRANSF ENTRE CONTAS 00424953005 VINICIOS DA SILV",
        "documento": "SI02679",
        "entrada": false,
        "valor": -20000,
        "id": 52501,
        "dataCriacao": "2021-06-23T20:29:07.715Z"
    },
    {
        "banco": 2,
        "data": "14/01/2021",
        "descricao": "TRANSF ENTRE CONTAS 01157799060 ANTONIO VARGAS F",
        "documento": "SI02743",
        "entrada": false,
        "valor": -14000,
        "id": 55481,
        "dataCriacao": "2021-06-23T20:29:07.715Z"
    },
    {
        "banco": 2,
        "data": "15/01/2021",
        "descricao": "LIQUIDACAO DE PARCELA ",
        "documento": "C00520032",
        "entrada": false,
        "valor": -2840.94,
        "id": 56446,
        "dataCriacao": "2021-06-23T20:29:07.715Z"
    },
    {
        "banco": 2,
        "data": "15/01/2021",
        "descricao": "TRANSF ENTRE CONTAS 76317064091 MARCUS VINICIUS ",
        "documento": "SI04355",
        "entrada": false,
        "valor": -7500,
        "id": 53532,
        "dataCriacao": "2021-06-23T20:29:07.715Z"
    },
    {
        "banco": 2,
        "data": "19/01/2021",
        "descricao": "COMPRAS NACIONAIS AUTO POSTO BRAZUCA       GRAVA",
        "documento": "VE0073508",
        "entrada": false,
        "valor": -100,
        "id": 1664,
        "dataCriacao": "2021-06-23T20:29:07.715Z"
    },
    {
        "banco": 2,
        "data": "20/01/2021",
        "descricao": "CESTA DE RELACIONAMENTO ",
        "documento": " ",
        "entrada": false,
        "valor": -117.95,
        "id": 51574,
        "dataCriacao": "2021-06-23T20:29:07.715Z"
    },
    {
        "banco": 2,
        "data": "21/01/2021",
        "descricao": "COMPRAS NACIONAIS CASA JARDIM I            ESTAN",
        "documento": "VE0387673",
        "entrada": false,
        "valor": -126,
        "id": 1818,
        "dataCriacao": "2021-06-23T20:29:07.715Z"
    },
    {
        "banco": 2,
        "data": "21/01/2021",
        "descricao": "TED 59285411000113 BANCO PAN SA                 ",
        "documento": "308820",
        "entrada": true,
        "valor": 606.2,
        "id": 52625,
        "dataCriacao": "2021-06-23T20:29:07.715Z"
    },
    {
        "banco": 2,
        "data": "22/01/2021",
        "descricao": "TED 20439215000110 RENATO BARTH AUTOMOVEIS LTDA ",
        "documento": "403040",
        "entrada": true,
        "valor": 73318.21,
        "id": 48913,
        "dataCriacao": "2021-06-23T20:29:07.715Z"
    },
    {
        "banco": 2,
        "data": "25/01/2021",
        "descricao": "INTEGR.CAPITAL SUBSCRITO ",
        "documento": "1",
        "entrada": false,
        "valor": -50,
        "id": 53589,
        "dataCriacao": "2021-06-23T20:29:07.715Z"
    },
    {
        "banco": 2,
        "data": "25/01/2021",
        "descricao": "TRANSF ENTRE CONTAS 97516945072 IGOR GOMES COSTA",
        "documento": "SI04980",
        "entrada": false,
        "valor": -2020,
        "id": 55640,
        "dataCriacao": "2021-06-23T20:29:07.715Z"
    },
    {
        "banco": 2,
        "data": "27/01/2021",
        "descricao": "TRANSF ENTRE CONTAS 02945712059 FERNANDO JUNIOR ",
        "documento": "SI01875",
        "entrada": false,
        "valor": -50000,
        "id": 52595,
        "dataCriacao": "2021-06-23T20:29:07.715Z"
    },
    {
        "banco": 2,
        "data": "28/01/2021",
        "descricao": "DEBITO TED/IB 71072616068 CLEBES UBIRAJARA MOREI",
        "documento": "I02977",
        "entrada": false,
        "valor": -20000,
        "id": 50831,
        "dataCriacao": "2021-06-23T20:29:07.715Z"
    },
    {
        "banco": 2,
        "data": "01/02/2021",
        "descricao": "ARRECADACAO ESTADUAL ",
        "documento": "DETRAN-RS",
        "entrada": false,
        "valor": -139.9,
        "id": 48688,
        "dataCriacao": "2021-06-23T20:29:07.715Z"
    },
    {
        "banco": 2,
        "data": "02/02/2021",
        "descricao": "TED 20439215000110 RENATO BARTH AUTOMOVEIS LTDA ",
        "documento": "404893",
        "entrada": true,
        "valor": 11192.1,
        "id": 55571,
        "dataCriacao": "2021-06-23T20:29:07.715Z"
    },
    {
        "banco": 2,
        "data": "02/02/2021",
        "descricao": "DEP CHEQUE 24H ",
        "documento": "424950260",
        "entrada": true,
        "valor": 1090,
        "id": 48908,
        "dataCriacao": "2021-06-23T20:29:07.715Z"
    },
    {
        "banco": 2,
        "data": "03/02/2021",
        "descricao": "COMPRAS NACIONAIS QUADROS E FILHOS         GRAVA",
        "documento": "VE0168797",
        "entrada": false,
        "valor": -50,
        "id": 53593,
        "dataCriacao": "2021-06-23T20:29:07.715Z"
    },
    {
        "banco": 2,
        "data": "03/02/2021",
        "descricao": "ARRECADACAO ESTADUAL ",
        "documento": "GADE",
        "entrada": false,
        "valor": -666.18,
        "id": 48726,
        "dataCriacao": "2021-06-23T20:29:07.715Z"
    },
    {
        "banco": 2,
        "data": "03/02/2021",
        "descricao": "ARRECADACAO ESTADUAL ",
        "documento": "DETRAN-RS",
        "entrada": false,
        "valor": -1102.24,
        "id": 55420,
        "dataCriacao": "2021-06-23T20:29:07.715Z"
    },
    {
        "banco": 2,
        "data": "03/02/2021",
        "descricao": "DEBITO TED/IB 71072616068 CLEBES UBIRAJARA MOREI",
        "documento": "I03267",
        "entrada": false,
        "valor": -12000,
        "id": 49746,
        "dataCriacao": "2021-06-23T20:29:07.715Z"
    },
    {
        "banco": 2,
        "data": "03/02/2021",
        "descricao": "DEBITO TED/IB 74734563004 MARIA REGINA FIDELIS L",
        "documento": "I03296",
        "entrada": false,
        "valor": -495,
        "id": 51728,
        "dataCriacao": "2021-06-23T20:29:07.715Z"
    }
];


let provedoresIspForce = [
    {
        provedorId: 1,
        provedorName: "One Telecon",
        enviroments: {
            corPrimaria: "rgb(183 10 10)",
            urlImagem: "https://static.bancointer.com.br/blog/banner-images/240be249-8ca8-4934-8364-d4a02b2e0d68.jpg",
            cordenadas: [
                [
                    {
                        "x": -20.12424683051076,
                        "y": -40.27260386528324
                    },
                    {
                        "x": -20.12236335971767,
                        "y": -40.27698316284773
                    },
                    {
                        "x": -20.12226469787893,
                        "y": -40.27876957012263
                    },
                    {
                        "x": -20.12386677517742,
                        "y": -40.28056725200175
                    },
                    {
                        "x": -20.1250152398846,
                        "y": -40.28144323320263
                    },
                    {
                        "x": -20.12581982185896,
                        "y": -40.28267678440345
                    },
                    {
                        "x": -20.12606856130313,
                        "y": -40.2845177410111
                    },
                    {
                        "x": -20.126595439706,
                        "y": -40.28557389221155
                    },
                    {
                        "x": -20.12699431105297,
                        "y": -40.28567287308753
                    },
                    {
                        "x": -20.12808086802731,
                        "y": -40.28574092426625
                    },
                    {
                        "x": -20.12860886820601,
                        "y": -40.28445311626147
                    },
                    {
                        "x": -20.12878121488264,
                        "y": -40.28389622742391
                    },
                    {
                        "x": -20.12892130477811,
                        "y": -40.28248904653503
                    },
                    {
                        "x": -20.12874013991258,
                        "y": -40.28083780694093
                    },
                    {
                        "x": -20.12941486589523,
                        "y": -40.28337854094601
                    },
                    {
                        "x": -20.12984891734548,
                        "y": -40.2850842423781
                    },
                    {
                        "x": -20.13047609573829,
                        "y": -40.28676998108549
                    },
                    {
                        "x": -20.13250817111499,
                        "y": -40.2916851109209
                    },
                    {
                        "x": -20.13322060398616,
                        "y": -40.2924246906236
                    },
                    {
                        "x": -20.13442274631942,
                        "y": -40.2925362668652
                    },
                    {
                        "x": -20.13628516970639,
                        "y": -40.29233685139527
                    },
                    {
                        "x": -20.13859065230315,
                        "y": -40.29232150014339
                    },
                    {
                        "x": -20.14086154353898,
                        "y": -40.29209458621349
                    },
                    {
                        "x": -20.14234660700793,
                        "y": -40.29167631698132
                    },
                    {
                        "x": -20.14313208243995,
                        "y": -40.29140666639778
                    },
                    {
                        "x": -20.14443916820085,
                        "y": -40.29118547772088
                    },
                    {
                        "x": -20.14425452504099,
                        "y": -40.29295447756449
                    },
                    {
                        "x": -20.14430003215506,
                        "y": -40.29385213980611
                    },
                    {
                        "x": -20.14440310849931,
                        "y": -40.29474828992466
                    },
                    {
                        "x": -20.14447947721302,
                        "y": -40.29621160761524
                    },
                    {
                        "x": -20.14537601284797,
                        "y": -40.29643471763036
                    },
                    {
                        "x": -20.14647247550949,
                        "y": -40.29640878998864
                    },
                    {
                        "x": -20.14782399648057,
                        "y": -40.29587440039145
                    },
                    {
                        "x": -20.14839782738684,
                        "y": -40.29441148954974
                    },
                    {
                        "x": -20.14850035489893,
                        "y": -40.29347756699895
                    },
                    {
                        "x": -20.14627642991104,
                        "y": -40.29165912885888
                    },
                    {
                        "x": -20.14535363181642,
                        "y": -40.29052464318152
                    },
                    {
                        "x": -20.14522169623777,
                        "y": -40.28939819983965
                    },
                    {
                        "x": -20.14255975398103,
                        "y": -40.28970193381931
                    },
                    {
                        "x": -20.14217956792696,
                        "y": -40.28933175527195
                    },
                    {
                        "x": -20.14136342945233,
                        "y": -40.28869058958762
                    },
                    {
                        "x": -20.14071928883102,
                        "y": -40.2877643472887
                    },
                    {
                        "x": -20.13898279364137,
                        "y": -40.28791748432728
                    },
                    {
                        "x": -20.13871668312188,
                        "y": -40.28671806033367
                    },
                    {
                        "x": -20.13865809798216,
                        "y": -40.28534117773854
                    },
                    {
                        "x": -20.13743885018486,
                        "y": -40.28324863057643
                    },
                    {
                        "x": -20.13614185557069,
                        "y": -40.28336127110899
                    },
                    {
                        "x": -20.13498653166862,
                        "y": -40.28329946756276
                    },
                    {
                        "x": -20.13252982208817,
                        "y": -40.2833079561697
                    },
                    {
                        "x": -20.13131527561576,
                        "y": -40.2831636791079
                    },
                    {
                        "x": -20.13044701927804,
                        "y": -40.28253987782723
                    },
                    {
                        "x": -20.12950374597282,
                        "y": -40.2799258617117
                    },
                    {
                        "x": -20.1288929880986,
                        "y": -40.2783795329256
                    },
                    {
                        "x": -20.12859713163096,
                        "y": -40.27674942574413
                    },
                    {
                        "x": -20.12872258678391,
                        "y": -40.27436578454948
                    },
                    {
                        "x": -20.12835731139442,
                        "y": -40.27304120200118
                    },
                    {
                        "x": -20.12790461008603,
                        "y": -40.27065889283001
                    },
                    {
                        "x": -20.12731959023705,
                        "y": -40.26955507816847
                    },
                    {
                        "x": -20.12721349162747,
                        "y": -40.26877936017385
                    },
                    {
                        "x": -20.12629105953461,
                        "y": -40.26879197912309
                    },
                    {
                        "x": -20.12584056459161,
                        "y": -40.2709112090979
                    },
                    {
                        "x": -20.12618570650151,
                        "y": -40.27313742815266
                    },
                    {
                        "x": -20.1260712328138,
                        "y": -40.27419934771694
                    },
                    {
                        "x": -20.12605223261278,
                        "y": -40.27535622757405
                    },
                    {
                        "x": -20.12530339319663,
                        "y": -40.27382441016978
                    },
                    {
                        "x": -20.12424683051076,
                        "y": -40.27260386528324
                    }
                ],
                [
                    {
                        "x": -20.14195835056523,
                        "y": -40.27245427623312
                    },
                    {
                        "x": -20.14507807323439,
                        "y": -40.27426548330256
                    },
                    {
                        "x": -20.14721458586385,
                        "y": -40.27722137659049
                    },
                    {
                        "x": -20.14899424721645,
                        "y": -40.27938820631472
                    },
                    {
                        "x": -20.15124775191742,
                        "y": -40.2782789315587
                    },
                    {
                        "x": -20.15330648504015,
                        "y": -40.2776288426473
                    },
                    {
                        "x": -20.15546891170579,
                        "y": -40.27718738372222
                    },
                    {
                        "x": -20.15804982665306,
                        "y": -40.27651447926136
                    },
                    {
                        "x": -20.16047527171377,
                        "y": -40.27557038357561
                    },
                    {
                        "x": -20.16249884396834,
                        "y": -40.27505327043446
                    },
                    {
                        "x": -20.16421318370584,
                        "y": -40.27355197321135
                    },
                    {
                        "x": -20.16604723156181,
                        "y": -40.27209851833848
                    },
                    {
                        "x": -20.16846552489813,
                        "y": -40.27040719246851
                    },
                    {
                        "x": -20.16783779154696,
                        "y": -40.2689284134287
                    },
                    {
                        "x": -20.1655289048262,
                        "y": -40.26897873496231
                    },
                    {
                        "x": -20.16460611287164,
                        "y": -40.2688228876796
                    },
                    {
                        "x": -20.16285856693638,
                        "y": -40.2675737075339
                    },
                    {
                        "x": -20.16139271196604,
                        "y": -40.26668639097062
                    },
                    {
                        "x": -20.15902013403064,
                        "y": -40.26551017825273
                    },
                    {
                        "x": -20.15856945842382,
                        "y": -40.26442498167139
                    },
                    {
                        "x": -20.1588759608325,
                        "y": -40.2620949431688
                    },
                    {
                        "x": -20.15646555221145,
                        "y": -40.26132892429412
                    },
                    {
                        "x": -20.15493224902011,
                        "y": -40.25937406350139
                    },
                    {
                        "x": -20.15443091538345,
                        "y": -40.25786231182609
                    },
                    {
                        "x": -20.15385105830786,
                        "y": -40.25699304163186
                    },
                    {
                        "x": -20.152611080184,
                        "y": -40.25794567119636
                    },
                    {
                        "x": -20.1536271298712,
                        "y": -40.26001235484287
                    },
                    {
                        "x": -20.1539669771509,
                        "y": -40.26221253050943
                    },
                    {
                        "x": -20.15301719255127,
                        "y": -40.2629334323866
                    },
                    {
                        "x": -20.15106932011668,
                        "y": -40.26410143511566
                    },
                    {
                        "x": -20.14946631741271,
                        "y": -40.26553398235348
                    },
                    {
                        "x": -20.14829190519424,
                        "y": -40.26628176419301
                    },
                    {
                        "x": -20.14719211200215,
                        "y": -40.26689093892048
                    },
                    {
                        "x": -20.14626044720844,
                        "y": -40.26711045442923
                    },
                    {
                        "x": -20.14512378366952,
                        "y": -40.26807723001912
                    },
                    {
                        "x": -20.14494128274663,
                        "y": -40.26667832027103
                    },
                    {
                        "x": -20.14350418541935,
                        "y": -40.26647093371864
                    },
                    {
                        "x": -20.14199941692068,
                        "y": -40.26614970730119
                    },
                    {
                        "x": -20.13958090057132,
                        "y": -40.26712341106857
                    },
                    {
                        "x": -20.14195835056523,
                        "y": -40.27245427623312
                    }
                ],
                [
                    {
                        "x": -20.15606928720933,
                        "y": -40.25380382625157
                    },
                    {
                        "x": -20.15599832962292,
                        "y": -40.25039946522549
                    },
                    {
                        "x": -20.1553833176343,
                        "y": -40.25030788762944
                    },
                    {
                        "x": -20.15392694136998,
                        "y": -40.25090340180774
                    },
                    {
                        "x": -20.15441529329131,
                        "y": -40.24985687059738
                    },
                    {
                        "x": -20.15466329426538,
                        "y": -40.2491057952869
                    },
                    {
                        "x": -20.15478644968228,
                        "y": -40.24839509304131
                    },
                    {
                        "x": -20.15455544496355,
                        "y": -40.24768864017175
                    },
                    {
                        "x": -20.15362096890878,
                        "y": -40.2475293913708
                    },
                    {
                        "x": -20.15310805366193,
                        "y": -40.24803524159185
                    },
                    {
                        "x": -20.1527597410839,
                        "y": -40.24881695288784
                    },
                    {
                        "x": -20.15240908377222,
                        "y": -40.24938212711452
                    },
                    {
                        "x": -20.15189259181751,
                        "y": -40.24923973965619
                    },
                    {
                        "x": -20.15180066795544,
                        "y": -40.24805820317162
                    },
                    {
                        "x": -20.15188461803854,
                        "y": -40.24722820514805
                    },
                    {
                        "x": -20.15293168664977,
                        "y": -40.24685053520727
                    },
                    {
                        "x": -20.15303273026839,
                        "y": -40.24681011699127
                    },
                    {
                        "x": -20.15410166065034,
                        "y": -40.2463957832605
                    },
                    {
                        "x": -20.15466600106996,
                        "y": -40.24566914184229
                    },
                    {
                        "x": -20.15468688271051,
                        "y": -40.24550924834385
                    },
                    {
                        "x": -20.15460173193821,
                        "y": -40.2450582200991
                    },
                    {
                        "x": -20.15455582095864,
                        "y": -40.24447513589427
                    },
                    {
                        "x": -20.15496116749932,
                        "y": -40.24403027644179
                    },
                    {
                        "x": -20.15563540130072,
                        "y": -40.24312768487984
                    },
                    {
                        "x": -20.1557051612483,
                        "y": -40.24303313352364
                    },
                    {
                        "x": -20.1560000096033,
                        "y": -40.24185103393614
                    },
                    {
                        "x": -20.15632753198095,
                        "y": -40.24064802973803
                    },
                    {
                        "x": -20.15642751458072,
                        "y": -40.23985429782517
                    },
                    {
                        "x": -20.15650971232379,
                        "y": -40.2393811857751
                    },
                    {
                        "x": -20.1556806332662,
                        "y": -40.23898205998243
                    },
                    {
                        "x": -20.15481157531121,
                        "y": -40.23888986405127
                    },
                    {
                        "x": -20.15387212162798,
                        "y": -40.23949175880121
                    },
                    {
                        "x": -20.15322732587185,
                        "y": -40.2400675602244
                    },
                    {
                        "x": -20.1530097407964,
                        "y": -40.2405269021346
                    },
                    {
                        "x": -20.15345180491157,
                        "y": -40.24136588159416
                    },
                    {
                        "x": -20.15298833548352,
                        "y": -40.24148710496065
                    },
                    {
                        "x": -20.15252417661358,
                        "y": -40.24078359387516
                    },
                    {
                        "x": -20.15229704434201,
                        "y": -40.24050131993821
                    },
                    {
                        "x": -20.15200748087591,
                        "y": -40.24017364643962
                    },
                    {
                        "x": -20.14792842246829,
                        "y": -40.24330918297066
                    },
                    {
                        "x": -20.14919637209391,
                        "y": -40.24556539217808
                    },
                    {
                        "x": -20.14970225409808,
                        "y": -40.24717796273531
                    },
                    {
                        "x": -20.14835303953011,
                        "y": -40.2481103731823
                    },
                    {
                        "x": -20.15041637241999,
                        "y": -40.25132071288987
                    },
                    {
                        "x": -20.1513138926975,
                        "y": -40.2530941601005
                    },
                    {
                        "x": -20.15224390304967,
                        "y": -40.25360329985353
                    },
                    {
                        "x": -20.15330668003399,
                        "y": -40.25390522065148
                    },
                    {
                        "x": -20.15606928720933,
                        "y": -40.25380382625157
                    }
                ],
                [
                    {
                        "x": -20.18016667285791,
                        "y": -40.26505321437234
                    },
                    {
                        "x": -20.1813021865513,
                        "y": -40.26524509517946
                    },
                    {
                        "x": -20.18263985744093,
                        "y": -40.26580100051468
                    },
                    {
                        "x": -20.18354482018785,
                        "y": -40.26649888342986
                    },
                    {
                        "x": -20.18480948957741,
                        "y": -40.26703673632412
                    },
                    {
                        "x": -20.18601574509758,
                        "y": -40.26791572287492
                    },
                    {
                        "x": -20.18713793938436,
                        "y": -40.26815595852405
                    },
                    {
                        "x": -20.18796817091192,
                        "y": -40.26842405109434
                    },
                    {
                        "x": -20.18761250208461,
                        "y": -40.26925201000488
                    },
                    {
                        "x": -20.18724670191493,
                        "y": -40.27021581801617
                    },
                    {
                        "x": -20.18649268311161,
                        "y": -40.27199887410578
                    },
                    {
                        "x": -20.18684865194639,
                        "y": -40.27234278760817
                    },
                    {
                        "x": -20.18540117793708,
                        "y": -40.27386577824669
                    },
                    {
                        "x": -20.18565935326517,
                        "y": -40.27510583409801
                    },
                    {
                        "x": -20.18724881054457,
                        "y": -40.27585687979933
                    },
                    {
                        "x": -20.18806647129324,
                        "y": -40.27835833917047
                    },
                    {
                        "x": -20.18991316681,
                        "y": -40.27780925108775
                    },
                    {
                        "x": -20.18954935670129,
                        "y": -40.27437519511182
                    },
                    {
                        "x": -20.19009907449901,
                        "y": -40.27311581558845
                    },
                    {
                        "x": -20.19158722722877,
                        "y": -40.27247256203034
                    },
                    {
                        "x": -20.19096727513562,
                        "y": -40.27086236396138
                    },
                    {
                        "x": -20.19242658862093,
                        "y": -40.26971587189355
                    },
                    {
                        "x": -20.19308523113484,
                        "y": -40.26969002030158
                    },
                    {
                        "x": -20.19318981510158,
                        "y": -40.26885513687406
                    },
                    {
                        "x": -20.19378833561294,
                        "y": -40.26566084858463
                    },
                    {
                        "x": -20.1916107145405,
                        "y": -40.26515068755033
                    },
                    {
                        "x": -20.19236986050275,
                        "y": -40.26274796906951
                    },
                    {
                        "x": -20.1912166757431,
                        "y": -40.26228781869751
                    },
                    {
                        "x": -20.18971252363784,
                        "y": -40.26173983182284
                    },
                    {
                        "x": -20.19032485787051,
                        "y": -40.26001876612847
                    },
                    {
                        "x": -20.19091911945851,
                        "y": -40.25830889863469
                    },
                    {
                        "x": -20.19053465962032,
                        "y": -40.25753774572802
                    },
                    {
                        "x": -20.18963560555549,
                        "y": -40.25600552500514
                    },
                    {
                        "x": -20.18872559040912,
                        "y": -40.25491540791415
                    },
                    {
                        "x": -20.18779680702894,
                        "y": -40.25386774090109
                    },
                    {
                        "x": -20.18675979631752,
                        "y": -40.25323339427915
                    },
                    {
                        "x": -20.18570957385067,
                        "y": -40.25251804646815
                    },
                    {
                        "x": -20.18396389283538,
                        "y": -40.25169930970869
                    },
                    {
                        "x": -20.18296368820642,
                        "y": -40.25495869415833
                    },
                    {
                        "x": -20.18251829074864,
                        "y": -40.257975678379
                    },
                    {
                        "x": -20.1827702579935,
                        "y": -40.25961277778833
                    },
                    {
                        "x": -20.18165443916556,
                        "y": -40.25993850348505
                    },
                    {
                        "x": -20.18072527201185,
                        "y": -40.2606689060287
                    },
                    {
                        "x": -20.18028415430194,
                        "y": -40.26207961857997
                    },
                    {
                        "x": -20.17974021530925,
                        "y": -40.26458773387969
                    },
                    {
                        "x": -20.18016667285791,
                        "y": -40.26505321437234
                    }
                ],
                [
                    {
                        "x": -20.19311725742795,
                        "y": -40.27958833577909
                    },
                    {
                        "x": -20.19353389625274,
                        "y": -40.27929190823488
                    },
                    {
                        "x": -20.19339571410916,
                        "y": -40.27877203466758
                    },
                    {
                        "x": -20.1947961092716,
                        "y": -40.27800484818103
                    },
                    {
                        "x": -20.19375483654315,
                        "y": -40.27529223030515
                    },
                    {
                        "x": -20.19205162296215,
                        "y": -40.27594279885435
                    },
                    {
                        "x": -20.19205172484918,
                        "y": -40.27685041836425
                    },
                    {
                        "x": -20.19204562866219,
                        "y": -40.27689266208213
                    },
                    {
                        "x": -20.19221926780715,
                        "y": -40.27790711763848
                    },
                    {
                        "x": -20.19311725742795,
                        "y": -40.27958833577909
                    }
                ],
                [
                    {
                        "x": -20.20089381039216,
                        "y": -40.26500717929018
                    },
                    {
                        "x": -20.20143548322488,
                        "y": -40.26413065691754
                    },
                    {
                        "x": -20.20160215887515,
                        "y": -40.26369289312802
                    },
                    {
                        "x": -20.2017039121721,
                        "y": -40.26308676156125
                    },
                    {
                        "x": -20.20201241513338,
                        "y": -40.26247088753821
                    },
                    {
                        "x": -20.20170279722938,
                        "y": -40.26215562940033
                    },
                    {
                        "x": -20.20110521259142,
                        "y": -40.26183971339443
                    },
                    {
                        "x": -20.19989019448228,
                        "y": -40.26182446644274
                    },
                    {
                        "x": -20.19934018472703,
                        "y": -40.26496801113025
                    },
                    {
                        "x": -20.20089381039216,
                        "y": -40.26500717929018
                    }
                ],
                [
                    {
                        "x": -20.19730572596714,
                        "y": -40.2661572928542
                    },
                    {
                        "x": -20.19821825523649,
                        "y": -40.26629576442016
                    },
                    {
                        "x": -20.19849234247181,
                        "y": -40.26515007773136
                    },
                    {
                        "x": -20.19753795394724,
                        "y": -40.26507665518695
                    },
                    {
                        "x": -20.19730572596714,
                        "y": -40.2661572928542
                    }
                ],
                [
                    {
                        "x": -20.20398190885854,
                        "y": -40.26343142418075
                    },
                    {
                        "x": -20.20518571894807,
                        "y": -40.26152049091606
                    },
                    {
                        "x": -20.2046724298184,
                        "y": -40.26125522676104
                    },
                    {
                        "x": -20.20439555405727,
                        "y": -40.2615649976105
                    },
                    {
                        "x": -20.20342458708523,
                        "y": -40.26304909730239
                    },
                    {
                        "x": -20.20398190885854,
                        "y": -40.26343142418075
                    }
                ],
                [
                    {
                        "x": -20.19766843271772,
                        "y": -40.24556996812567
                    },
                    {
                        "x": -20.19780467788588,
                        "y": -40.2449303817989
                    },
                    {
                        "x": -20.19719655280974,
                        "y": -40.24466464239622
                    },
                    {
                        "x": -20.19698868870712,
                        "y": -40.24540663208805
                    },
                    {
                        "x": -20.19766843271772,
                        "y": -40.24556996812567
                    }
                ],
                [
                    {
                        "x": -20.19631992299868,
                        "y": -40.23276348639231
                    },
                    {
                        "x": -20.19899047252287,
                        "y": -40.2334430175264
                    },
                    {
                        "x": -20.20180251510468,
                        "y": -40.22860326545049
                    },
                    {
                        "x": -20.20093963142073,
                        "y": -40.22536431982611
                    },
                    {
                        "x": -20.20201261461123,
                        "y": -40.21843000783379
                    },
                    {
                        "x": -20.19814443153282,
                        "y": -40.21516064597492
                    },
                    {
                        "x": -20.19357971672066,
                        "y": -40.2176151926239
                    },
                    {
                        "x": -20.19186509189974,
                        "y": -40.21941405488728
                    },
                    {
                        "x": -20.19477575254461,
                        "y": -40.2281252768755
                    },
                    {
                        "x": -20.19495958440291,
                        "y": -40.23021705449275
                    },
                    {
                        "x": -20.19631992299868,
                        "y": -40.23276348639231
                    }
                ]
            ],
            numeroWhatsappCliente: "51982008358",
            mensagemWhatsappCliente: "Mensagem",
            linkAreaDeCliente: "https://google.com",
            planos: [
                {
                    "id": 1,
                    "titulo": "Plano básico",
                    "valor": 10,
                    "periodoDeCobranca": "Mês",
                    "velocidade": 120,
                    "color": "#00000",
                    "contempla": [
                        "WiFi Plus Grátis",
                        "NOW - Conteúdos Online",
                        "Claro Vídeo",
                        "SKEELO",
                        "McAfee"
                    ],
                    "naoContempla": [
                        "WiFi Plus Grátis",
                        "NOW - Conteúdos Online",
                        "Claro Vídeo",
                        "SKEELO",
                        "McAfee"
                    ]
                },
                {
                    "id": 2,
                    "titulo": "Plano intermediário",
                    "valor": 10,
                    "periodoDeCobranca": "Mês",
                    "color": "#982176",
                    "velocidade": 120,
                    "contempla": [
                        "WiFi Plus Grátis",
                        "NOW - Conteúdos Online",
                        "Claro Vídeo",
                        "SKEELO",
                        "McAfee",
                        "WiFi Plus Grátis",
                        "NOW - Conteúdos Online"
                    ],
                    "naoContempla": [
                        "Claro Vídeo",
                        "SKEELO",
                        "McAfee"
                    ]
                },
                {
                    "id": 3,
                    "titulo": "Plano completo",
                    "valor": 10,
                    "periodoDeCobranca": "Mês",
                    "color": "#571665",
                    "velocidade": 120,
                    "contempla": [
                        "WiFi Plus Grátis",
                        "NOW - Conteúdos Online",
                        "Claro Vídeo",
                        "SKEELO",
                        "McAfee",
                        "WiFi Plus Grátis",
                        "NOW - Conteúdos Online",
                        "Claro Vídeo",
                        "SKEELO"
                    ],
                    "naoContempla": [
                        "McAfee"
                    ]
                },
                {
                    "id": 4,
                    "titulo": "Plano premium",
                    "valor": 10,
                    "periodoDeCobranca": "Mês",
                    "color": "#571665",
                    "velocidade": 120,
                    "contempla": [
                        "WiFi Plus Grátis",
                        "NOW - Conteúdos Online",
                        "Claro Vídeo",
                        "SKEELO",
                        "McAfee",
                        "WiFi Plus Grátis",
                        "NOW - Conteúdos Online",
                        "Claro Vídeo",
                        "SKEELO",
                        "McAfee"
                    ],
                    "naoContempla": []
                }
            ]
        }
    },
    {
        "provedorId": 2,
        "provedorName": "Provedor do Juan",
        "enviroments": {
            "corPrimaria": "#2300ff",
            "urlImagem": "https://avatarfiles.alphacoders.com/230/thumb-1920-230736.jpg",
            "cordenadas": {},
            "numeroWhatsappCliente": "51995748995",
            "mensagemWhatsappCliente": "Olá seu puto",
            "linkAreaDeCliente": "https://youtube.com",
            "planos": [
                {
                    "id": 1,
                    "titulo": "Primeiro plano teste",
                    "valor": 50,
                    "periodoDeCobranca": "Mês",
                    "velocidade": 50,
                    "color": "#379539",
                    "contempla": [
                        "WiFi Plus Grátis",
                        "Tanto faz"
                    ],
                    "naoContempla": [
                        "Acesso ao porno",
                        "Acesso ao Futebol",
                        "Tanto faz"
                    ]
                },
                {
                    "id": 2,
                    "titulo": "Plano fodase",
                    "valor": 12,
                    "periodoDeCobranca": "Mês",
                    "color": "#982176",
                    "velocidade": 120,
                    "contempla": [
                        "WiFi Plus Grátis",
                        "NOW - Conteúdos Online",
                        "Claro Vídeo",
                        "SKEELO",
                        "McAfee",
                        "WiFi Plus Grátis",
                        "NOW - Conteúdos Online"
                    ],
                    "naoContempla": [
                        "Claro Vídeo",
                        "SKEELO",
                        "McAfee"
                    ]
                }
            ]
        }
    }
]
provedoresIspForce[0].enviroments.cordenadas = [];


class Routes {
    public route = Router();

    constructor() {
        this.route.post('/upload', function (req, res) {
            console.log(req.body);
            res.json({ ok: true });
        });

        this.route.post('/logar', function (req, res) {
            const usuario = req.body.usuario;
            const senha = req.body.senha;
            const usuarioLogado = usuarios.find(user => user.usuario == usuario && user.senha == senha);
            if (!!usuarioLogado) {
                res.json(buildUser(usuarioLogado, usuarioLogado.dataCriacao));
                // res.json({
                //     id: usuarioLogado.id,
                //     nomeCompleto: usuarioLogado.nomeCompleto,
                //     usuario: usuarioLogado.usuario,
                //     dataCriacao: usuarioLogado.dataCriacao,
                // });
            } else {
                res.status(404).json({
                    error: 'Usuário ou senha inválida.'
                });
            }
        });

        this.route.post('/add/user', function (req, res) {
            const usuario = req.body.usuario;
            const senha = req.body.senha;
            const nomeCompleto = req.body.nomeCompleto;
            const newUser = {
                id: (usuarios.length + 1),
                dataCriacao: getActualDate(),
                usuario: usuario,
                senha: senha,
                nomeCompleto: nomeCompleto,
                saldo: 0
            };
            usuarios.push(newUser);
            res.json(newUser);
        });

        this.route.get('/users', function (req, res) {
            res.json(usuarios.map(user => {
                return buildUser(user, null);
            }));
        });

        this.route.post('/registros', function (req, res) {
            const itens: any[] = req.body;


            itens.forEach(item => {
                const stringToHash = (Math.floor(Math.random() * 1000) + 1).toString();
                var hash = 0, i, chr;
                if (stringToHash.length === 0) return hash;
                for (i = 0; i < stringToHash.length; i++) {
                    chr = stringToHash.charCodeAt(i);
                    hash = ((hash << 5) - hash) + chr;
                    hash |= 0; // Convert to 32bit integer
                }

                item.id = hash;
                item.dataCriacao = getActualDate();
                registros.push(item);
            });
            res.json(req.body);
        });

        this.route.get('/registros', function (req, res) {
            res.json(registros);
        });

        this.route.get('/registros/page/:page/count/:count', function (req, res) {
            const page = parseFloat(req.params.page);
            const count = parseFloat(req.params.count);
            const totalPages = registros.length / count;
            res.json({
                totalResults: registros.length,
                totalPages: Math.ceil(totalPages),
                data: registros.slice((page - 1) * count, page * count)
            });
        });

        this.route.get('/registros/comissionados/page/:page/count/:count/id-usuario/:idUsuario', function (req, res) {
            const page = parseFloat(req.params.page);
            const count = parseFloat(req.params.count);
            const idUsuario = parseFloat(req.params.idUsuario);
            const registrosResponse = registros
            .filter(item => !!item.transacao && !!item.transacao.geraComissao && (item.transacao.idUsuarioDestinatario == idUsuario || item.transacao.idUsuarioOrigem == idUsuario));
            const totalPages = registrosResponse.length / count;
            res.json({
                totalResults: registrosResponse.length,
                totalPages: Math.ceil(totalPages),
                data: registrosResponse.slice((page - 1) * count, page * count)
            });
        });

        this.route.get('/registros/pendentes/page/:page/count/:count', function (req, res) {
            const page = parseFloat(req.params.page);
            const count = parseFloat(req.params.count);
            const registrosResponse = registros.filter(item => !item.transacao);
            const totalPages = registrosResponse.length / count;
            res.json({
                totalResults: registrosResponse.length,
                totalPages: Math.ceil(totalPages),
                data: registrosResponse.slice((page - 1) * count, page * count)
            });
        });

        this.route.get('/registros/por-usuario/page/:page/count/:count/id-usuario/:idUsuario', function (req, res) {
            const page = parseFloat(req.params.page);
            const count = parseFloat(req.params.count);
            const idUsuario = parseFloat(req.params.idUsuario);
            const registrosResponse = registros
            .filter(item => !!item.transacao 
                && (item.transacao.idUsuarioOrigem == idUsuario 
                || item.transacao.idUsuarioDestinatario == idUsuario));

            const totalPages = registrosResponse.length / count;
            res.json({
                totalResults: registrosResponse.length,
                totalPages: Math.ceil(totalPages),
                data: registrosResponse.slice((page - 1) * count, page * count)
            });
        });

        this.route.get('/users/page/:page/count/:count', function (req, res) {
            const page = parseFloat(req.params.page);
            const count = parseFloat(req.params.count);
            const registrosResponse = usuarios.map(item => {
                return buildUser(item, null);
            });
            const totalPages = registrosResponse.length / count;
            res.json({
                totalResults: registrosResponse.length,
                totalPages: Math.ceil(totalPages),
                data: registrosResponse.slice((page - 1) * count, page * count)
            });
        });

        this.route.put('/registrar-transacao', (req, res) => {
            const registro = req.body;
            registros.forEach((item, index) => {
                if (item.id == registro.id) {
                    item.transacao = registro.transacao;
                    item.descricaoPessoal = registro.descricaoPessoal;
                    usuarios.find(user => user.id == registro.transacao.idUsuarioDestinatario).saldo += Math.abs(item.valor);
                    usuarios.find(user => user.id == registro.transacao.idUsuarioOrigem).saldo -= Math.abs(item.valor);
                }
            });
            res.json(registros.find(item => item.id == registro.id));
        });

        this.route.get('/registros-aprovados/id-usuario/:id', (req, res) => {
            const idUsuario = req.params.id;
            let registrosEntrada = registros.filter(item => !!item.transacao && item.transacao.idUsuarioDestinatario == idUsuario);
            let registrosSaida = registros.filter(item => !!item.transacao && item.transacao.idUsuarioOrigem == idUsuario);
            
            let entradas = registrosEntrada.reduce((acc, act) => {
                let b = Math.abs(act.valor);
                return acc + b;
            }, 0);

            let saidas = registrosSaida.reduce((acc, act) => {
                let b = Math.abs(act.valor);
                return acc + b;
            }, 0);

            res.json({
                entradas: entradas,
                saidas: saidas,
                saldo: entradas - saidas,
                registrosEntrada: registrosEntrada,
                registrosSaida: registrosSaida
            });
        });

        this.route.get('/hash', (req, res) => {
            const stringToHash = req.query.str;

            var hash = 0, i, chr;
            if (stringToHash.length === 0) return hash;
            for (i = 0; i < stringToHash.length; i++) {
                chr = stringToHash.charCodeAt(i);
                hash = ((hash << 5) - hash) + chr;
                hash |= 0; // Convert to 32bit integer
            }

            res.json({
                hash: hash
            });
        });
// =================================================================================
        this.route.get('/page', function (req, res) {
            res.sendFile('/Users/mateus/projetos/pocs/sorteador/index.html');
        });
        /* 
        Este endpoint vai ser consumido pelo serviço de usuários
        para gerar um token quando um usuário for cadastrado.
        */
        this.route.get('/auth', async (req: Request, res: Response) => {
            const id = req.query.id;
            createToken(res, () => { }, id);
        });

        /* 
        Este endpoint vai ser consumido pelos demais
        para validar um token.
        */
        this.route.get('/auth/validate', async (req: Request, res: Response) => {
            validateToken(req, res, () => res.status(200).json({ msg: "tudo ok" }));
        });

        /* 
        Este endpoint vai ser consumido pelo client
        para retornar um token quando usuário logar na aplicação.
        */
        this.route.post('/auth/login', async (req: Request, res: Response) => {
            try {
                const { username, password } = req.body;
                const user: UserModel = JSON.parse((await findUserByUsername(username)).toString());
                if (!user) res.status(404).json({ error: 'Usuário não encontrado.' });
                if (user.password != password) res.status(404).json({ error: 'Senha inválida.' });
                createToken(res, () => { }, user);
            } catch (err) {
                res.status(404).json({ error: 'Usuário não encontrado.' });
            }
        });

        this.route.post('/estoque', async (req: Request, res: Response) => {
            try {
                res.json({
                    estoqueCd: 10
                });
            } catch (err) {
                res.status(404).json({ error: 'Usuário não encontrado.' });
            }
        });

        this.route.get('/teste', async (req: Request, res: Response) => {
            res.sendFile('/home/mateus/projetos/ispforce/ispforte-teste/teste.html');
        });


        this.route.post('/poligono', (req, res) => {
            const obj = req.body;
            res.json(obj.cordenadas.some(item => this.isInside(item, item.length, { x: obj.lat, y: obj.lng })));
        });

        this.route.get('/planos', (req, res) => {
            res.json(
                [
                    {
                        "id": 1,
                        "titulo": "Plano básico",
                        "valor": 10,
                        "periodoDeCobranca": "Mês",
                        "velocidade": 120,
                        "color": "#00000",
                        "contempla": [
                            "WiFi Plus Grátis",
                            "NOW - Conteúdos Online",
                            "Claro Vídeo",
                            "SKEELO",
                            "McAfee"
                        ],
                        "naoContempla": [
                            "WiFi Plus Grátis",
                            "NOW - Conteúdos Online",
                            "Claro Vídeo",
                            "SKEELO",
                            "McAfee"
                        ]
                    },
                    {
                        "id": 2,
                        "titulo": "Plano intermediário",
                        "valor": 10,
                        "periodoDeCobranca": "Mês",
                        "color": "#982176",
                        "velocidade": 120,
                        "contempla": [
                            "WiFi Plus Grátis",
                            "NOW - Conteúdos Online",
                            "Claro Vídeo",
                            "SKEELO",
                            "McAfee",
                            "WiFi Plus Grátis",
                            "NOW - Conteúdos Online"
                        ],
                        "naoContempla": [
                            "Claro Vídeo",
                            "SKEELO",
                            "McAfee"
                        ]
                    },
                    {
                        "id": 3,
                        "titulo": "Plano completo",
                        "valor": 10,
                        "periodoDeCobranca": "Mês",
                        "color": "#571665",
                        "velocidade": 120,
                        "contempla": [
                            "WiFi Plus Grátis",
                            "NOW - Conteúdos Online",
                            "Claro Vídeo",
                            "SKEELO",
                            "McAfee",
                            "WiFi Plus Grátis",
                            "NOW - Conteúdos Online",
                            "Claro Vídeo",
                            "SKEELO"
                        ],
                        "naoContempla": [
                            "McAfee"
                        ]
                    },
                    {
                        "id": 4,
                        "titulo": "Plano premium",
                        "valor": 10,
                        "periodoDeCobranca": "Mês",
                        "color": "#571665",
                        "velocidade": 120,
                        "contempla": [
                            "WiFi Plus Grátis",
                            "NOW - Conteúdos Online",
                            "Claro Vídeo",
                            "SKEELO",
                            "McAfee",
                            "WiFi Plus Grátis",
                            "NOW - Conteúdos Online",
                            "Claro Vídeo",
                            "SKEELO",
                            "McAfee"
                        ],
                        "naoContempla": []
                    }
                ]
            );
        });

        this.route.get('/chat-enviroments/:provedorId', (req, res) => {
            const provedorId = Number(req.params.provedorId);
            const provedor = provedoresIspForce.find(provedor => provedor.provedorId == provedorId);
            if (!provedor) res.status(404).json({
                errorMessage: "Provedor não encontrado."
            });
            res.json(provedor);
        });


        this.route.post('/send-cordenadas/:provedorId', (req, res) => {
            const provedorId = Number(req.params.provedorId);
            const provedor = provedoresIspForce.find(provedor => provedor.provedorId == provedorId);
            if (!provedor) res.status(404).json({
                errorMessage: "Provedor não encontrado."
            });
            provedor.enviroments.cordenadas = req.body;
            res.json(req.body);
        });

        this.route.post('/change-color', (req, res) => {
            console.log("req.body.color");
            provedoresIspForce[0].enviroments.corPrimaria = req.body.color;
            console.log(provedoresIspForce[0].enviroments.corPrimaria)
            res.status(204);
        });

    }

    readonly INF = 10000;
    public point(x: any, y: any) {
        return {
            x: x,
            y: y
        }
    }

    public onSegment(p: any, q: any, r: any) { //boolean
        if (q.x <= Math.max(p.x, r.x) &&
            q.x >= Math.min(p.x, r.x) &&
            q.y <= Math.max(p.y, r.y) &&
            q.y >= Math.min(p.y, r.y)) {
            return true;
        }
        return false;
    }

    public orientation(p: any, q: any, r: any) { //number
        let val = (q.y - p.y) * (r.x - q.x)
            - (q.x - p.x) * (r.y - q.y);

        if (val == 0) {
            return 0; // colinear
        }
        return (val > 0) ? 1 : 2; // clock or counterclock wise
    }

    public doIntersect(p1: any, q1: any, p2: any, q2: any) { //boolean
        let o1 = this.orientation(p1, q1, p2);
        let o2 = this.orientation(p1, q1, q2);
        let o3 = this.orientation(p2, q2, p1);
        let o4 = this.orientation(p2, q2, q1);

        if (o1 != o2 && o3 != o4) {
            return true;
        }

        if (o1 == 0 && this.onSegment(p1, p2, q1)) {
            return true;
        }

        if (o2 == 0 && this.onSegment(p1, q2, q1)) {
            return true;
        }

        if (o3 == 0 && this.onSegment(p2, p1, q2)) {
            return true;
        }

        if (o4 == 0 && this.onSegment(p2, q1, q2)) {
            return true;
        }

        return false;
    }

    public isInside(polygon: any, n: any, p: any) { // boolean
        if (n < 3) {
            return false;
        }

        let extreme = this.point(this.INF, p.y);

        let count = 0, i = 0;
        do {
            let next = (i + 1) % n;

            if (this.doIntersect(polygon[i], polygon[next], p, extreme)) {
                if (this.orientation(polygon[i], p, polygon[next]) == 0) {
                    return this.onSegment(polygon[i], p,
                        polygon[next]);
                }

                count++;
            }
            i = next;
        } while (i != 0);

        return (count % 2 == 1);
    }
}

export default new Routes().route

export const validateToken = (req: Request, res: Response, next: NextFunction) => {
    const token = <string>req.headers["app-token"];
    let jwtPayload;
    try {
        jwtPayload = <any>jwt.verify(token, config.default.jwtSecret);
        res.locals.jwtPayload = jwtPayload;
    } catch (error) {
        res.status(401).json({ error: "Invalid token." });
        return;
    }
    next();
}

export const createToken = (res: Response, next: NextFunction, user: UserModel) => {
    const id = user.id;
    const newToken = jwt.sign({ id }, config.default.jwtSecret, {
        expiresIn: 60000
    });
    res.json({ token: newToken, user: user });
    next();
}

export async function findUserByUsername(username): Promise<UserModel> {
    const baseUrl = 'http://localhost:2020/v2/user/username/' + username;
    return await http.get(baseUrl);
}

export const getActualDate = () => {
    const offset = 0;
    return new Date( new Date().getTime() + offset * 3600 * 1000);
}

export const buildUser = (user, data) => {
    return {
        id: user.id,
        nomeCompleto: user.nomeCompleto,
        usuario: user.usuario,
        dataCriacao: !!data ? user.dataCriacao : getActualDate(),
        saldo: user.saldo
    }
}